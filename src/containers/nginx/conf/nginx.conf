events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    server_tokens off;

    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=global:10m rate=50r/s;

    upstream web_backend {
        server web:80;
    }

    upstream api_backend {
        server backend:3000;
    }

    # HTTP Server (redirect to HTTPS)
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name:8443$request_uri;
    }

    # HTTPS Server with WAF protection
    server {
        listen 443 ssl;
        server_name localhost;


        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;

        location ~* \.(php|asp|aspx|jsp)$ {
            return 403;
        }

        location ~* (union.*select|concat.*\(|script.*>|javascript:|eval\(|expression\() {
            return 403;
        }

        location /api/ {
            limit_req zone=global burst=10 nodelay;
            limit_req_status 429;

            # Block SQL injection attempts
            if ($request_uri ~* "(union|select|insert|delete|drop|create|alter|exec)") {
                return 403;
            }

            # URL rewriting for API compatibility
            rewrite ^/api/signup$ /sign/up break;
            rewrite ^/api/signin$ /sign/in break;
            rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~* ^/(login|signup) {
            limit_req zone=login burst=5 nodelay;
            limit_req_status 429;

            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~* \.(php|asp|aspx|jsp)$ {
            return 403;
        }

        location ~* (union.*select|concat.*\(|script.*>|javascript:|eval\(|expression\() {
            return 403;
        }

        # Frontend with rate limiting
        location / {
            limit_req zone=global burst=20 nodelay;
            limit_req_status 429;

            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html =404;

            #proxy_pass http://web_backend;
            #proxy_set_header Host $host;
            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /waf-health {
            return 200 "WAF is running\n";
            add_header Content-Type text/plain;
            access_log off;
        }

        location ~ /\. {
            return 403;
        }

        location ~ \.(env|git|svn|htaccess|htpasswd)$ {
            return 403;
        }
    }
}
