events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    server_tokens off;

    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=global:10m rate=50r/s;

    upstream web_backend {
        server web:80;
    }
    
    upstream api_backend {
        server backend:3000;
    }

    server {
        listen 80;
        
        location ~* \.(php|asp|aspx|jsp)$ {
            return 403;
        }
        
        location ~* (union.*select|concat.*\(|script.*>|javascript:|eval\(|expression\() {
            return 403;
        }

        location /api/ {
            limit_req zone=global burst=10 nodelay;
            limit_req_status 429;
            
            # Block SQL injection attempts
            if ($request_uri ~* "(union|select|insert|delete|drop|create|alter|exec)") {
                return 403;
            }
            
            # URL rewriting for API compatibility
            rewrite ^/api/signup$ /sign/up break;
            rewrite ^/api/signin$ /sign/in break;
            rewrite ^/api/(.*)$ /$1 break;
            
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~* ^/(login|signup) {
            limit_req zone=login burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~* \.(php|asp|aspx|jsp)$ {
            return 403;
        }
        
        location ~* (union.*select|concat.*\(|script.*>|javascript:|eval\(|expression\() {
            return 403;
        }

        # Frontend with rate limiting
        location / {
            limit_req zone=global burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /waf-health {
            return 200 "WAF is running\n";
            add_header Content-Type text/plain;
            access_log off;
        }

        location ~ /\. {
            return 403;
        }
        
        location ~ \.(env|git|svn|htaccess|htpasswd)$ {
            return 403;
        }
    }
}
